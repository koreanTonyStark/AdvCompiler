digraph AST {
  graph [fontname="Times New Roman",fontsize=10];
  node  [fontname="Courier New",fontsize=10];
  edge  [fontname="Times New Roman",fontsize=10];

  node0 [label="m pfact",shape=box];
  node53 [label="call WriteStr",shape=box];
  node55 [label="&()",shape=box];
  node54 [label="\"Prime factoring\"",shape=ellipse];
  node55->node54;
  node53->node55;
  node0 -> node53 [style=dotted];
  node57 [label="call WriteLn",shape=box];
  node53 -> node57 [style=dotted];
  node59 [label="call WriteLn",shape=box];
  node57 -> node59 [style=dotted];
  node61 [label="call WriteStr",shape=box];
  node63 [label="&()",shape=box];
  node62 [label="\"Enter number to factor: \"",shape=ellipse];
  node63->node62;
  node61->node63;
  node59 -> node61 [style=dotted];
  node67 [label=":=",shape=box];
  node65 [label="n",shape=ellipse];
  node67->node65;
  node66 [label="call ReadInt",shape=box];
  node67->node66;
  node61 -> node67 [style=dotted];
  node68 [label="call WriteStr",shape=box];
  node70 [label="&()",shape=box];
  node69 [label="\"  prime factors of \"",shape=ellipse];
  node70->node69;
  node68->node70;
  node67 -> node68 [style=dotted];
  node72 [label="call WriteInt",shape=box];
  node73 [label="n",shape=ellipse];
  node72->node73;
  node68 -> node72 [style=dotted];
  node75 [label="call WriteStr",shape=box];
  node77 [label="&()",shape=box];
  node76 [label="\": \"",shape=ellipse];
  node77->node76;
  node75->node77;
  node72 -> node75 [style=dotted];
  node79 [label="call primefactor",shape=box];
  node80 [label="n",shape=ellipse];
  node79->node80;
  node75 -> node79 [style=dotted];
  node82 [label="call WriteLn",shape=box];
  node79 -> node82 [style=dotted];
  node2 [label="p/f primefactor",shape=box];
  node52 [label="if",shape=box];
  node7 [label="<",shape=box];
  node5 [label="n",shape=ellipse];
  node7->node5;
  node6 [label="1",shape=ellipse];
  node7->node6;
  node52->node7;
  node8 [label="return",shape=box];
  node52 -> node8 [style=dotted];
  node51 [label="if",shape=box];
  node11 [label="=",shape=box];
  node9 [label="n",shape=ellipse];
  node11->node9;
  node10 [label="1",shape=ellipse];
  node11->node10;
  node51->node11;
  node12 [label="call WriteStr",shape=box];
  node14 [label="&()",shape=box];
  node13 [label="\" \"",shape=ellipse];
  node14->node13;
  node12->node14;
  node51 -> node12 [style=dotted];
  node16 [label="call WriteInt",shape=box];
  node17 [label="1",shape=ellipse];
  node16->node17;
  node12 -> node16 [style=dotted];
  node21 [label=":=",shape=box];
  node19 [label="f",shape=ellipse];
  node21->node19;
  node20 [label="2",shape=ellipse];
  node21->node20;
  node51 -> node21 [style=dotted];
  node50 [label="while",shape=box];
  node24 [label="<=",shape=box];
  node22 [label="f",shape=ellipse];
  node24->node22;
  node23 [label="n",shape=ellipse];
  node24->node23;
  node50->node24;
  node49 [label="if",shape=box];
  node31 [label="=",shape=box];
  node29 [label="mul",shape=box];
  node27 [label="div",shape=box];
  node25 [label="n",shape=ellipse];
  node27->node25;
  node26 [label="f",shape=ellipse];
  node27->node26;
  node29->node27;
  node28 [label="f",shape=ellipse];
  node29->node28;
  node31->node29;
  node30 [label="n",shape=ellipse];
  node31->node30;
  node49->node31;
  node32 [label="call WriteStr",shape=box];
  node34 [label="&()",shape=box];
  node33 [label="\" \"",shape=ellipse];
  node34->node33;
  node32->node34;
  node49 -> node32 [style=dotted];
  node36 [label="call WriteInt",shape=box];
  node37 [label="f",shape=ellipse];
  node36->node37;
  node32 -> node36 [style=dotted];
  node43 [label=":=",shape=box];
  node39 [label="n",shape=ellipse];
  node43->node39;
  node42 [label="div",shape=box];
  node40 [label="n",shape=ellipse];
  node42->node40;
  node41 [label="f",shape=ellipse];
  node42->node41;
  node43->node42;
  node36 -> node43 [style=dotted];
  node48 [label=":=",shape=box];
  node44 [label="f",shape=ellipse];
  node48->node44;
  node47 [label="add",shape=box];
  node45 [label="f",shape=ellipse];
  node47->node45;
  node46 [label="1",shape=ellipse];
  node47->node46;
  node48->node47;
  node49 -> node48 [style=dotted];
  node50 -> node49 [style=dotted];
  node21 -> node50 [style=dotted];
  node52 -> node51 [style=dotted];
  node2 -> node52 [style=dotted];
  node0 -> node2;
}
