digraph AST {
  graph [fontname="Times New Roman",fontsize=10];
  node  [fontname="Courier New",fontsize=10];
  edge  [fontname="Times New Roman",fontsize=10];

  node0 [label="m fibonacci",shape=box];
  node33 [label="call WriteStr",shape=box];
  node35 [label="&()",shape=box];
  node34 [label="\"Fibonacci numbers\"",shape=ellipse];
  node35->node34;
  node33->node35;
  node0 -> node33 [style=dotted];
  node37 [label="call WriteLn",shape=box];
  node33 -> node37 [style=dotted];
  node39 [label="call WriteLn",shape=box];
  node37 -> node39 [style=dotted];
  node45 [label=":=",shape=box];
  node41 [label="i",shape=ellipse];
  node45->node41;
  node42 [label="call ReadNumber",shape=box];
  node44 [label="&()",shape=box];
  node43 [label="\"Enter a number (0 to exit): \"",shape=ellipse];
  node44->node43;
  node42->node44;
  node45->node42;
  node39 -> node45 [style=dotted];
  node71 [label="while",shape=box];
  node48 [label=">",shape=box];
  node46 [label="i",shape=ellipse];
  node48->node46;
  node47 [label="0",shape=ellipse];
  node48->node47;
  node71->node48;
  node49 [label="call WriteStr",shape=box];
  node51 [label="&()",shape=box];
  node50 [label="\"fibonacci(\"",shape=ellipse];
  node51->node50;
  node49->node51;
  node71 -> node49 [style=dotted];
  node53 [label="call WriteInt",shape=box];
  node54 [label="i",shape=ellipse];
  node53->node54;
  node49 -> node53 [style=dotted];
  node56 [label="call WriteStr",shape=box];
  node58 [label="&()",shape=box];
  node57 [label="\") = \"",shape=ellipse];
  node58->node57;
  node56->node58;
  node53 -> node56 [style=dotted];
  node60 [label="call WriteInt",shape=box];
  node61 [label="call fib",shape=box];
  node62 [label="i",shape=ellipse];
  node61->node62;
  node60->node61;
  node56 -> node60 [style=dotted];
  node64 [label="call WriteLn",shape=box];
  node60 -> node64 [style=dotted];
  node70 [label=":=",shape=box];
  node66 [label="i",shape=ellipse];
  node70->node66;
  node67 [label="call ReadNumber",shape=box];
  node69 [label="&()",shape=box];
  node68 [label="\"Enter a number (0 to exit): \"",shape=ellipse];
  node69->node68;
  node67->node69;
  node70->node67;
  node64 -> node70 [style=dotted];
  node45 -> node71 [style=dotted];
  node2 [label="p/f fib",shape=box];
  node20 [label="if",shape=box];
  node7 [label="<=",shape=box];
  node5 [label="n",shape=ellipse];
  node7->node5;
  node6 [label="1",shape=ellipse];
  node7->node6;
  node20->node7;
  node9 [label="return",shape=box];
  node8 [label="n",shape=ellipse];
  node9->node8;
  node20 -> node9 [style=dotted];
  node19 [label="return",shape=box];
  node18 [label="add",shape=box];
  node10 [label="call fib",shape=box];
  node13 [label="sub",shape=box];
  node11 [label="n",shape=ellipse];
  node13->node11;
  node12 [label="1",shape=ellipse];
  node13->node12;
  node10->node13;
  node18->node10;
  node14 [label="call fib",shape=box];
  node17 [label="sub",shape=box];
  node15 [label="n",shape=ellipse];
  node17->node15;
  node16 [label="2",shape=ellipse];
  node17->node16;
  node14->node17;
  node18->node14;
  node19->node18;
  node20 -> node19 [style=dotted];
  node2 -> node20 [style=dotted];
  node0 -> node2;
  node21 [label="p/f ReadNumber",shape=box];
  node25 [label="call WriteStr",shape=box];
  node26 [label="str",shape=ellipse];
  node25->node26;
  node21 -> node25 [style=dotted];
  node30 [label=":=",shape=box];
  node28 [label="i",shape=ellipse];
  node30->node28;
  node29 [label="call ReadInt",shape=box];
  node30->node29;
  node25 -> node30 [style=dotted];
  node32 [label="return",shape=box];
  node31 [label="i",shape=ellipse];
  node32->node31;
  node30 -> node32 [style=dotted];
  node0 -> node21;
}
