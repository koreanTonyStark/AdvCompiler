digraph CfgInterProc {
  graph [fontname="Times New Roman",fontsize=10];
  node  [fontname="Courier New",fontsize=10];
  edge  [fontname="Times New Roman",fontsize=10];
// scope 'test03'
node0 [label=" ENTER test03\r   0:     assign a <- 1\l",shape=box];
node0 -> node1;
node1 [label="  1:     assign b <- 0\l",shape=box];
node1 -> node2;
node2 [label="  2:     if     1 = 1 goto 6\l",shape=box];
node2 -> node4;
node2 -> node3;
node3 [label="  3:     goto   4\l",shape=box];
node3 -> node10;
node4 [label="  4: 6:\l",shape=box];
node4 -> node5;
node5 [label="  5:     if     0 = 1 goto 3\l",shape=box];
node5 -> node7;
node5 -> node6;
node6 [label="  6:     goto   4\l",shape=box];
node6 -> node10;
node7 [label="  7: 3:\l",shape=box];
node7 -> node8;
node8 [label="  8:     assign t0 <- 1\l",shape=box];
node8 -> node9;
node9 [label="  9:     goto   5\l",shape=box];
node9 -> node12;
node10 [label=" 10: 4:\l",shape=box];
node10 -> node11;
node11 [label=" 11:     assign t0 <- 0\l",shape=box];
node11 -> node12;
node12 [label=" 12: 5:\l",shape=box];
node12 -> node13;
node13 [label=" 13:     assign c <- t0\l",shape=box];
node13 -> node14;
node14 [label=" 14:     if     c = 1 goto 8_if_true\l",shape=box];
node14 -> node16;
node14 -> node15;
node15 [label=" 15:     goto   9_if_false\l",shape=box];
node15 -> node20;
node16 [label=" 16: 8_if_true:\l",shape=box];
node16 -> node17;
node17 [label=" 17:     param  0 <- 1\l",shape=box];
node17 -> node18;
node18 [label=" 18:     call   WriteInt\l",shape=box];
node18 -> node19;
node19 [label=" 19:     goto   7\l",shape=box];
node19 -> node23;
node20 [label=" 20: 9_if_false:\l",shape=box];
node20 -> node21;
node21 [label=" 21:     param  0 <- 0\l",shape=box];
node21 -> node22;
node22 [label=" 22:     call   WriteInt\l",shape=box];
node22 -> node23;
node23 [label=" 23: 7:\l",shape=box];
node23 -> node24;
node24 [label=" 24:     if     1 = 1 goto 13\l",shape=box];
node24 -> node27;
node24 -> node25;
node25 [label=" 25:     if     0 = 1 goto 13\l",shape=box];
node25 -> node27;
node25 -> node26;
node26 [label=" 26:     goto   14\l",shape=box];
node26 -> node30;
node27 [label=" 27: 13:\l",shape=box];
node27 -> node28;
node28 [label=" 28:     assign t1 <- 1\l",shape=box];
node28 -> node29;
node29 [label=" 29:     goto   15\l",shape=box];
node29 -> node32;
node30 [label=" 30: 14:\l",shape=box];
node30 -> node31;
node31 [label=" 31:     assign t1 <- 0\l",shape=box];
node31 -> node32;
node32 [label=" 32: 15:\l",shape=box];
node32 -> node33;
node33 [label=" 33:     assign c <- t1\l",shape=box];
node33 -> node34;
node34 [label=" 34:     if     c = 1 goto 18_if_true\l",shape=box];
node34 -> node36;
node34 -> node35;
node35 [label=" 35:     goto   19_if_false\l",shape=box];
node35 -> node40;
node36 [label=" 36: 18_if_true:\l",shape=box];
node36 -> node37;
node37 [label=" 37:     param  0 <- 1\l",shape=box];
node37 -> node38;
node38 [label=" 38:     call   WriteInt\l",shape=box];
node38 -> node39;
node39 [label=" 39:     goto   17\l",shape=box];
node39 -> node43;
node40 [label=" 40: 19_if_false:\l",shape=box];
node40 -> node41;
node41 [label=" 41:     param  0 <- 0\l",shape=box];
node41 -> node42;
node42 [label=" 42:     call   WriteInt\l",shape=box];
node42 -> node43;
node43 [label=" 43: 17:\l",shape=box];
node43 -> node44;
node44 [label=" 44:     if     1 = 1 goto 24\l",shape=box];
node44 -> node48;
node44 -> node45;
node45 [label=" 45:     if     0 = 1 goto 24\l",shape=box];
node45 -> node48;
node45 -> node46;
node46 [label=" 46:     assign t2 <- 1\l",shape=box];
node46 -> node47;
node47 [label=" 47:     goto   25\l",shape=box];
node47 -> node50;
node48 [label=" 48: 24:\l",shape=box];
node48 -> node49;
node49 [label=" 49:     assign t2 <- 0\l",shape=box];
node49 -> node50;
node50 [label=" 50: 25:\l",shape=box];
node50 -> node51;
node51 [label=" 51:     assign c <- t2\l",shape=box];
node51 -> node52;
node52 [label=" 52:     if     c = 1 goto 28_if_true\l",shape=box];
node52 -> node54;
node52 -> node53;
node53 [label=" 53:     goto   29_if_false\l",shape=box];
node53 -> node58;
node54 [label=" 54: 28_if_true:\l",shape=box];
node54 -> node55;
node55 [label=" 55:     param  0 <- 1\l",shape=box];
node55 -> node56;
node56 [label=" 56:     call   WriteInt\l",shape=box];
node56 -> node57;
node57 [label=" 57:     goto   27\l",shape=box];
node57 -> node61;
node58 [label=" 58: 29_if_false:\l",shape=box];
node58 -> node59;
node59 [label=" 59:     param  0 <- 0\l",shape=box];
node59 -> node60;
node60 [label=" 60:     call   WriteInt\l",shape=box];
node60 -> node61;
node61 [label=" EXIT test03\r  61: 27:\l",shape=box];
}
